---
title: "Stable Isotopes and Movement"
author: "Ben Hlina"
format:
  html:
    embed-resources: true
  # html:
  #   embed-resources: true
  #   smooth-scroll: true
  #   self-contained: true
  #   
editor: visual

project:
     execute-dir: project
     
execute:
  echo: false
  warning: false
---

### Purpose:

To understand if fish that were captured from different basins have different movement patterns that influence stable isotope signatures.

#### Calculating Movement:

To determine the average amount of movement per month we used detection data, prepared for a network analysis that identified when a fish moved from one receiver grouping to another. The number times (weight) a fish moved between the same two locations was recorded and the shortest distance among all combinations of receiver groups was determined. The weight for each receiver group pairing was multipled by the distance of the shortest path between that receiver group pair. The averge was detemrined for each month over the course of year.

```{r, message = FALSE, output = FALSE}
# ---- bring in packages -----
library(broom)
library(car)
library(dplyr)
library(DHARMa)
library(emmeans)
library(fitdistrplus)
library(ggplot2)
library(glmmTMB)
library(GLMMadaptive)
library(here)
library(lme4)
library(readr)
library(sf)

# ---- bring in dataframe ------

df <- read_rds(here("Saved Data", 
                    "cleaned_lkt_tagged_sia.rds"))


edges_sf <- read_rds(here("Saved Data", 
                          "lkt_edges_sf.rds"))

# ---- Bring in shapefile ------
p_lake <- st_read(dsn = here::here("Shapefiles",
                                   "."),
                  layer = "plake_edit_wo_link") %>% 
  
  dplyr::select(AREA_GEO, geometry)
p_lake_utm <- p_lake %>% 
  st_transform(., crs = 32618)
```

```{r, message = FALSE}
edges_sf %>% 
  group_by(from_to, cost_dist, geometry) %>% 
  summarise() %>% 
  ggplot() + 
  geom_sf(data = p_lake_utm, fill = NA) + 
  geom_sf(aes(colour = cost_dist), linewidth = 1) + 
  scale_colour_viridis_c(option = "B", end = 0.75) +
  theme_bw(base_size = 15) +
  theme(panel.grid = element_blank(), 
        axis.text.x = element_text(angle = 45, hjust = 1)) + 
  labs(
    x = "Latitude", 
    y = "Longitude"
  )
```

```{r, output = FALSE}
glimpse(df)
glimpse(edges_sf)
df <- df %>% 
  filter(c_13 != is.na(c_13))

edges_sf <- edges_sf %>% 
  filter(from != to)

glimpse(edges_sf)
# ---- calculate distance for each month for each year ---- 

dis_my <- edges_sf %>% 
  st_drop_geometry() %>% 
  as_tibble() %>% 
  dplyr::select(floy_tag, fish_basin, month, from_nam, to_nam, 
                season, year, 
                weight, cost_dist) %>% 
  mutate(
    dis = weight * cost_dist, 
    dis_km = dis / 1000, 
    dis_cubed = dis_km ^ (1 / 3)
  )



dis_my 


dis_mean_month <- dis_my %>% 
  group_by(floy_tag, fish_basin, month) %>% 
  summarise(
    dis_mean_km = mean(dis_km),
    dis_mean_km_sd = sd(dis_km),
    dis_mean_km_sem = sd(dis_km) / sqrt(n()),
    dis_mean_km_var = var(dis_km),
    dis_mean = mean(dis_cubed),
    dis_sd = sd(dis_cubed),
    dis_sem = sd(dis_cubed) / sqrt(n()), 
    dis_var = var(dis_cubed)
  ) %>% 
  ungroup()

dis_mean_month
```

I have calculated the mean for distance traveled (cubed root of km/month) for each month. I have made a histrogram of each month to see if there are any trends

```{r, message=FALSE}
ggplot(data = dis_mean_month, aes(x = dis_mean)) + 
  geom_histogram() + 
  facet_wrap(~ month) + 
  theme_bw() +
  theme(
    panel.grid = element_blank()
  ) + 
  labs(
    x = expression(paste("Movement (", sqrt("km / month", "" ^ 3), 
                         ")")),
    y = "Frequency"
  )
```

What we see is that November - April when the lake becomes isothermal movement spreads out we see very similar patterns between this time period, more fish move around as they are not thermally restricted during this time. If we look at May - October which is stratification occurs in June and ends by mid to late September we see fish do not move as much as thermal habitats limit their movement

```{r, output = FALSE, message = FALSE}
dis_mean <- dis_mean_month %>% 
  mutate(
    therm = if_else(month %in% c("November", "December", 
                                 "January", "February", 
                                 "March", "April"), false = "Stratification", 
                    true = "Isothermal")
  ) %>% 
  group_by(floy_tag, therm) %>% 
  summarise(
    dis_mean_km_o = mean(dis_mean_km),
    dis_mean_km_sd_o = sd(dis_mean_km),
    dis_mean_km_sem_o = sd(dis_mean_km) / sqrt(n()),
    dis_mean_km_var_o = var(dis_mean_km),
    dis_mean_o = mean(dis_mean),
    dis_sd_o = sd(dis_mean),
    dis_sem_o = sd(dis_mean) / sqrt(n()), 
    dis_var_o = var(dis_mean)
  ) %>% 
  ungroup()
# dis_m <- dis_my %>% 
#   group_by(
#     floy_tag, fish_basin, month
#   ) %>% 
#   summarise(
#     sum_dis = sum(dis_cubed),
#     sum_dis_raw = sum(dis_km), 
#   ) %>% 
#   ungroup()
# 
# dis_m
# 
# dis_mean <- dis_m %>% 
#   group_by(floy_tag, fish_basin) %>% 
#   summarise(
#     mean_dis_raw = mean(sum_dis_raw), 
#     sem_dis_raw = sd(sum_dis_raw) / sqrt(n()), 
#     mean_dis = mean(sum_dis), 
#     sem_dis = sd(sum_dis) / sqrt(n())
#   ) %>% 
#   ungroup()
# 
# dis_mean

df_movment <- df %>% 
  left_join(dis_mean, by = c("sample" = "floy_tag"))


glimpse(df_movment)
df_movment_heard <- df_movment %>% 
  filter(dis_mean_o != is.na(dis_mean_o) & 
           c_13 != is.na(c_13))
glimpse(df_movment_heard)
```

## $\delta^{15}$N *versus* Movement ± sem with colour as basin for isothermal and stratification

```{r, warning=FALSE}
# ------------------ ANALYSIS -------------------------------------------

ggplot(data = df_movment_heard, 
       aes(x = n_15, y = dis_mean_o)) + 
  geom_point(size = 5, aes(fill = basin), 
             colour = "black", 
             shape = 21, stroke = 0.8) +
  geom_errorbar(aes(ymin = dis_mean_o - dis_sem_o, 
                    ymax = dis_mean_o + dis_sem_o), width = 0.05) +
  # scale_shape_manual(values = c(21:23), 
  #                    name = "Basin") + 
  scale_fill_viridis_d(begin = 0.25, end = 0.85, 
                       option = "D", 
                       name = "Basin",
                       alpha = 0.75
  ) +
  # scale_y_continuous(breaks = seq(0, 8, 2), 
  #                    limits = c(0, 8.5)) +
  facet_wrap(. ~ therm) + 
  theme_bw(base_size = 15) +
  theme(axis.text = element_text(colour = "black"),
        panel.grid = element_blank(), 
        legend.position = c(0.92, 0.85), 
        # legend.title.align = 0.5,
        legend.box = "horizontal",
        legend.background = element_blank()) + 
  labs(x = expression(paste(delta ^ 15, "N")), 
       y = expression(paste("Movement (", sqrt("km / month", "" ^ 3), 
                            ")"))) -> p1
p1
```

## $\delta^{13}$C *versus* Movement ± sem with colour as basin for isothermal and stratification

```{r, warnings = FALSE}
ggplot(data = df_movment_heard, 
       aes(x = c_13, y = dis_mean_o)) + 
  geom_point(size = 5, aes(fill = basin), 
             colour = "black", 
             shape = 21, stroke = 0.8) +
  geom_errorbar(aes(ymin = dis_mean_o - dis_sem_o, 
                    ymax = dis_mean_o + dis_sem_o), width = 0.05) +
  # scale_shape_manual(values = c(21:23), 
  #                    name = "Basin") + 
  scale_fill_viridis_d(begin = 0.25, end = 0.85, 
                       option = "D", 
                       name = "Basin",
                       alpha = 0.75
  ) +
  # scale_y_continuous(breaks = seq(0, 10, 2), 
  #                    limits = c(0, 9)) +
  theme_bw(base_size = 15) +
  facet_wrap(.~ therm) + 
  #   geom_text(
  #     aes(x = (-29 + -2), y = 8.75), label = "Pelagic",
  #     size = 9, vjust = 0, hjust = 0, check_overlap = TRUE) +
  #   geom_text(
  #     aes(x = (-27.3 + 1), y = 8.75), label = "Littoral",
  #     size = 9, vjust = 0, hjust = 0, check_overlap = TRUE) +
  #   geom_segment(aes(x = -27.28392, y = 8.65, xend = -24.28392, yend = 8.65),
  #                arrow = arrow(length = unit(0.5, "cm"))) +
  # geom_segment(aes(x = -29, y = 8.65, xend = -32, yend = 8.65),
  #                arrow = arrow(length = unit(0.5, "cm"))) +
  #   
theme(axis.text = element_text(colour = "black"),
      panel.grid = element_blank(), 
      legend.position = c(0.92, 0.85), 
      # legend.title.align = 0.5,
      legend.box = "horizontal",
      legend.background = element_blank()) + 
  labs(x = expression(paste(delta ^ 13, "C")), 
       y = expression(paste("Movement (", sqrt("km / month", "" ^ 3), 
                            ")"))) -> p2
p2

```

```{r, output = FALSE}
dis_mean_overall <- dis_mean_month %>% 
  group_by(floy_tag) %>% 
  summarise(
    dis_mean_km_o = mean(dis_mean_km),
    dis_mean_km_sd_o = sd(dis_mean_km),
    dis_mean_km_sem_o = sd(dis_mean_km) / sqrt(n()),
    dis_mean_km_var_o = var(dis_mean_km),
    dis_mean_o = mean(dis_mean),
    dis_sd_o = sd(dis_mean),
    dis_sem_o = sd(dis_mean) / sqrt(n()), 
    dis_var_o = var(dis_mean)
  ) %>% 
  ungroup()
# dis_m <- dis_my %>% 
#   group_by(
#     floy_tag, fish_basin, month
#   ) %>% 
#   summarise(
#     sum_dis = sum(dis_cubed),
#     sum_dis_raw = sum(dis_km), 
#   ) %>% 
#   ungroup()
# 
# dis_m
# 
# dis_mean <- dis_m %>% 
#   group_by(floy_tag, fish_basin) %>% 
#   summarise(
#     mean_dis_raw = mean(sum_dis_raw), 
#     sem_dis_raw = sd(sum_dis_raw) / sqrt(n()), 
#     mean_dis = mean(sum_dis), 
#     sem_dis = sd(sum_dis) / sqrt(n())
#   ) %>% 
#   ungroup()
# 
# dis_mean

df_movment_overall <- df %>% 
  left_join(dis_mean_overall, by = c("sample" = "floy_tag"))


glimpse(df_movment)
df_movment_heard_o <- df_movment_overall %>% 
  filter(dis_mean_o != is.na(dis_mean_o) & 
           c_13 != is.na(c_13))
glimpse(df_movment_heard_o)
```

## $\delta^{15}$N *versus* Movement ± sem with colour as basin

```{r, warning=FALSE}
# ------------------ ANALYSIS -------------------------------------------

ggplot(data = df_movment_heard_o, 
       aes(x = n_15, y = dis_mean_o)) + 
  geom_point(size = 5, aes(fill = basin), 
             colour = "black", 
             shape = 21, stroke = 0.8) +
  geom_errorbar(aes(ymin = dis_mean_o - dis_sem_o, 
                    ymax = dis_mean_o + dis_sem_o), width = 0.05) +
  # scale_shape_manual(values = c(21:23), 
  #                    name = "Basin") + 
  scale_fill_viridis_d(begin = 0.25, end = 0.85, 
                       option = "D", 
                       name = "Basin",
                       alpha = 0.75
  ) +
  # scale_y_continuous(breaks = seq(0, 8, 2), 
  #                    limits = c(0, 8.5)) +
  theme_bw(base_size = 15) +
  theme(axis.text = element_text(colour = "black"),
        panel.grid = element_blank(), 
        legend.position = c(0.92, 0.85), 
        # legend.title.align = 0.5,
        legend.box = "horizontal",
        legend.background = element_blank()) + 
  labs(x = expression(paste(delta ^ 15, "N")), 
       y = expression(paste("Movement (", sqrt("km / month", "" ^ 3), 
                            ")"))) -> p3
p3
```

## $\delta^{13}$C *versus* Movement ± sem with colour as basin

```{r, warnings = FALSE}
ggplot(data = df_movment_heard_o, 
       aes(x = c_13, y = dis_mean_o)) + 
  geom_point(size = 5, aes(fill = basin), 
             colour = "black", 
             shape = 21, stroke = 0.8) +
  geom_errorbar(aes(ymin = dis_mean_o - dis_sem_o, 
                    ymax = dis_mean_o + dis_sem_o), width = 0.05) +
  # scale_shape_manual(values = c(21:23), 
  #                    name = "Basin") + 
  scale_fill_viridis_d(begin = 0.25, end = 0.85, 
                       option = "D", 
                       name = "Basin",
                       alpha = 0.75
  ) +
  # scale_y_continuous(breaks = seq(0, 10, 2), 
  #                    limits = c(0, 9)) +
  theme_bw(base_size = 15) +
  #   geom_text(
  #     aes(x = (-29 + -2), y = 8.75), label = "Pelagic",
  #     size = 9, vjust = 0, hjust = 0, check_overlap = TRUE) +
  #   geom_text(
  #     aes(x = (-27.3 + 1), y = 8.75), label = "Littoral",
  #     size = 9, vjust = 0, hjust = 0, check_overlap = TRUE) +
  #   geom_segment(aes(x = -27.28392, y = 8.65, xend = -24.28392, yend = 8.65),
  #                arrow = arrow(length = unit(0.5, "cm"))) +
  # geom_segment(aes(x = -29, y = 8.65, xend = -32, yend = 8.65),
  #                arrow = arrow(length = unit(0.5, "cm"))) +
  #   
theme(axis.text = element_text(colour = "black"),
      panel.grid = element_blank(), 
      legend.position = c(0.92, 0.85), 
      # legend.title.align = 0.5,
      legend.box = "horizontal",
      legend.background = element_blank()) + 
  labs(x = expression(paste(delta ^ 13, "C")), 
       y = expression(paste("Movement (", sqrt("km / month", "" ^ 3), 
                            ")"))) -> p4
p4
```

```{r}
# ---- look at distrubtions ----
descdist(df_movment_heard_o$dis_mean_o)
descdist(df_movment_heard_o$c_13)
descdist(df_movment_heard_o$n_15)

ggplot(data = df_movment_heard_o, aes(x = dis_mean_o)) +
  geom_histogram()

ggplot(data = df_movment_heard_o, aes(x = c_13)) +
  geom_histogram()

ggplot(data = df_movment_heard_o, aes(x = n_15)) +
  geom_histogram()
```


```{r}
# --- create model for mean_dis ~ c_13 -----
# m <- mixed_model(fixed = dis_mean_o ~ c_13 + basin, 
#                  random = ~ c_13 | sample, 
#                  data = df_movment_heard_o,
#                   family =)
m <- glmmTMB(dis_mean_o ~ c_13  * basin + (1|sample),
             family = gaussian(link = "identity"),
             data = df_movment_heard_o,
             REML = TRUE)

res <- simulateResiduals(m)

plot(res)

Anova(mod = m)


m1 <- glmmTMB(c_13 ~ dis_mean_o * basin + (1|sample),
              data = df_movment_heard_o, 
              family = gaussian(link = "identity"),
              REML = TRUE)

res1 <- simulateResiduals(m1)

plot(res1)
Anova(m1)

```

Anova(mod = m)

res2 <- simulateResiduals(m2)

plot(res2)

Anova(m2, type = "II")

m3 <- glmmTMB(log(n_15) ~ dis_mean_o * basin + (1|sample),

              data = df_movment_heard,

              family = gaussian(link = "identity"),

              REML = TRUE)

res3 <- simulateResiduals(m3)

plot(res3)

Anova(m3)

#

# m1 <- glmmTMB(mean_dis ~ c_13 * fish_basin + (1|sample),

#              data = df_movment_heard, family = gaussian(link = "log"))

# res1 <- simulateResiduals(m1)

# plot(res1)

#

# Anova(m1)
